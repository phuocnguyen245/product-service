generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

enum ProductStatus {
  DRAFT
  PUBLISHED
  ARCHIVED
}

enum CategoryStatus {
  ACTIVE
  INACTIVE
}

enum ProductVariantStatus {
  ACTIVE
  INACTIVE
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  slug        String    @unique
  lft         Int
  rgt         Int
  level       Int
  products    Product[]
  isDeleted   Boolean   @default(false)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model Product {
  id              String           @id @default(auto()) @map("_id") @db.ObjectId
  userId          String           @db.ObjectId              // Thêm userId để xác định người sở hữu sản phẩm
  name            String
  slug            String           @unique
  description     String?
  categoryId      String           @db.ObjectId
  category        Category         @relation(fields: [categoryId], references: [id])
  productVariants ProductVariant[]
  status          ProductStatus @default(DRAFT)
  tagIds          String[]         @db.ObjectId
  isDeleted       Boolean          @default(false)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
}

model ProductVariant {
  id                        String                     @id @default(auto()) @map("_id") @db.ObjectId
  productId                 String                     @db.ObjectId
  product                   Product                    @relation(fields: [productId], references: [id])
  name                      String
  sku                       String
  status                    ProductVariantStatus       @default(INACTIVE)
  value                     String                      
  isDeleted                 Boolean                    @default(false)
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt
  productVariantIngredients ProductVariantIngredient[]
}


model Ingredient {
  id                        String                     @id @default(auto()) @map("_id") @db.ObjectId
  userId                    String                     @db.ObjectId              // Thêm userId để xác định người sở hữu nguyên liệu
  name                      String
  unit                      String                     // Ví dụ: ml, g, kg, v.v.
  description               String?
  isDeleted                 Boolean                    @default(false)
  createdAt                 DateTime                   @default(now())
  updatedAt                 DateTime                   @updatedAt
  productVariantIngredients ProductVariantIngredient[]
}

model ProductVariantIngredient {
  id               String         @id @default(auto()) @map("_id") @db.ObjectId
  productVariantId String         @db.ObjectId
  productVariant   ProductVariant @relation(fields: [productVariantId], references: [id])
  ingredientId     String         @db.ObjectId
  ingredient       Ingredient     @relation(fields: [ingredientId], references: [id])
  quantity         Float          // Lượng nguyên liệu dùng cho variant cụ thể (ví dụ: 10.0 ml)
  isDeleted        Boolean        @default(false)
  createdAt        DateTime       @default(now())
  updatedAt        DateTime       @updatedAt
}


model Tag {
  id         String    @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  productIds String[]  @db.ObjectId    // Lưu mảng ObjectId của sản phẩm liên quan
  isDeleted  Boolean   @default(false)
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}
